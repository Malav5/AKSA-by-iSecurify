import React from 'react';

const VulnerabilityDetail = ({ vulnerability, onClose }) => {
  if (!vulnerability) return null;

  const v = vulnerability._source;

  return (
    <div className="fixed inset-0 z-50 bg-gray-900/50 bg-opacity-40 flex items-center justify-center px-4">
      <div className="bg-white rounded-xl shadow-xl w-full max-w-5xl max-h-[90vh] overflow-hidden flex flex-col">
        
        {/* Header */}
        <div className="sticky top-0 bg-white border-b border-gray-200 px-6 py-4 flex justify-between items-center shadow-sm z-10">
          <h2 className="text-2xl font-bold text-red-600">{v.vulnerability?.id || 'Vulnerability Detail'}</h2>
          <button
            onClick={onClose}
            className="text-gray-600 hover:text-red-600 text-3xl font-bold leading-none"
            aria-label="Close"
          >
            Ã—
          </button>
        </div>

        {/* Content */}
        <div className="overflow-y-auto p-6 space-y-6 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-hide">
          
          {/* Section Template */}
          {[
            {
              title: 'Vulnerability Info',
              content: (
                <>
                  <Item label="Title" value={v.vulnerability?.title} />
                  <Item label="Description" value={v.vulnerability?.description} />
                  <Item label="Severity" value={v.vulnerability?.severity} />
                  <Item label="Score" value={`${v.vulnerability?.score?.base || 'N/A'} (CVSS v${v.vulnerability?.score?.version || '-'})`} />
                  <Item label="Category" value={v.vulnerability?.category} />
                  <Item label="Classification" value={v.vulnerability?.classification} />
                  <Item label="CVE ID" value={v.vulnerability?.id} />
                  <Item label="Published At" value={v.vulnerability?.published_at} />
                  <Item label="Detected At" value={v.vulnerability?.detected_at} />
                  <Item label="Under Evaluation" value={v.vulnerability?.under_evaluation ? 'Yes' : 'No'} />
                </>
              )
            },
            {
              title: 'Scanner Details',
              content: (
                <>
                  <Item label="Source" value={v.vulnerability?.scanner?.source} />
                  <Item label="Vendor" value={v.vulnerability?.scanner?.vendor} />
                  <Item label="Condition" value={v.vulnerability?.scanner?.condition} />
                  <Item label="Reference" value={
                    <a href={v.vulnerability?.scanner?.reference} target="_blank" rel="noreferrer" className="text-blue-600 underline break-all">
                      {v.vulnerability?.scanner?.reference}
                    </a>
                  } />
                </>
              )
            },
            {
              title: 'External References',
              content: (
                <ul className="list-disc pl-5 space-y-1 text-blue-600">
                  {(v.vulnerability?.reference?.split(', ') || []).map((ref, i) => (
                    <li key={i}>
                      <a href={ref} target="_blank" rel="noreferrer" className="underline break-all">{ref}</a>
                    </li>
                  ))}
                </ul>
              )
            },
            {
              title: 'Package Information',
              content: (
                <>
                  <Item label="Name" value={v.package?.name} />
                  <Item label="Version" value={v.package?.version} />
                  <Item label="Architecture" value={v.package?.architecture} />
                  <Item label="Type" value={v.package?.type} />
                  <Item label="Path" value={v.package?.path} />
                </>
              )
            },
            {
              title: 'Agent Information',
              content: (
                <>
                  <Item label="Name" value={v.agent?.name} />
                  <Item label="ID" value={v.agent?.id} />
                  <Item label="Type" value={v.agent?.type} />
                  <Item label="Version" value={v.agent?.version} />
                </>
              )
            },
            {
              title: 'Operating System',
              content: (
                <>
                  <Item label="Full" value={v.host?.os?.full} />
                  <Item label="Name" value={v.host?.os?.name} />
                  <Item label="Platform" value={v.host?.os?.platform} />
                  <Item label="Version" value={v.host?.os?.version} />
                </>
              )
            },
            {
              title: 'Wazuh Details',
              content: (
                <>
                  <Item label="Cluster Name" value={v.wazuh?.cluster?.name} />
                  <Item label="Schema Version" value={v.wazuh?.schema?.version} />
                </>
              )
            }
          ].map(({ title, content }, idx) => (
            <section key={idx} className="bg-gray-50 p-4 rounded-lg shadow-sm">
              <h3 className="text-lg font-semibold text-gray-800 mb-3">{title}</h3>
              <div className="space-y-2">{content}</div>
            </section>
          ))}

        </div>
      </div>
    </div>
  );
};

// Reusable label-value component
const Item = ({ label, value }) => (
  <p className="text-gray-700 text-sm">
    <strong>{label}:</strong>{' '}
    <span className="text-gray-800">{value || 'N/A'}</span>
  </p>
);

export default VulnerabilityDetail;
